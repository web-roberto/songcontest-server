{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","componets/BandAdd.js","componets/BandList.js","componets/BandChart.js","pages/HomePage.js","BandNamesApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","BandAdd","valor","setValor","useContext","onSubmit","ev","preventDefault","trim","length","emit","nombre","className","placeholder","onChange","target","BandList","bands","setBands","off","map","band","key","id","onClick","name","event","nuevoNombre","cambioNombre","onBlur","votes","BandChart","crearGrafica","ctx","document","getElementById","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","animation","scales","xAxes","stacked","HomePage","BandNamesApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.6678df4b.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { useSocket } from '../hooks/useSocket';\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const { socket, online } = useSocket('https://songcontest.herokuapp.com/');\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useMemo, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nexport const useSocket = ( serverPath ) => {\n\n    const socket = useMemo( () => io.connect( serverPath ), [ serverPath ] );\n    const [ online, setOnline ] = useState(false);\n\n    useEffect(() => {\n        setOnline( socket.connected );\n    }, [ socket ])\n\n    useEffect( () => {\n        socket.on('connect', () => {\n            setOnline( true );\n        })\n\n    }, [ socket ])\n\n    useEffect( () => {\n\n        socket.on('disconnect', () => {\n            setOnline( false );\n        })\n\n    }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}","import React, { useContext, useState } from 'react';\nimport { SocketContext } from '../context/SocketContext';\n\nexport const BandAdd = () => {\n  const [valor, setValor] = useState('');\n  const { socket } = useContext(SocketContext);\n\n  const onSubmit = (ev) => {\n    ev.preventDefault();\n\n    if (valor.trim().length > 0) {\n      socket.emit('crear-banda', { nombre: valor });\n      setValor('');\n    }\n  };\n\n  return (\n    <>\n      <h3>Add Music Group</h3>\n\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"form-control\"\n          placeholder=\"Nuevo nombre de banda\"\n          value={valor}\n          onChange={(ev) => setValor(ev.target.value)}\n        />\n      </form>\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { SocketContext } from '../context/SocketContext';\n\nexport const BandList = () => {\n  const [bands, setBands] = useState([]);\n  const { socket } = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.on('current-bands', (bands) => {\n      setBands(bands);\n    });\n    return () => socket.off('current-bands');\n  }, [socket]);\n\n  const cambioNombre = (event, id) => {\n    const nuevoNombre = event.target.value;\n\n    setBands((bands) =>\n      bands.map((band) => {\n        if (band.id === id) {\n          band.name = nuevoNombre;\n        }\n        return band;\n      })\n    );\n  };\n\n  const onPerdioFoco = (id, nombre) => {\n    socket.emit('cambiar-nombre-banda', { id, nombre });\n  };\n\n  const votar = (id) => {\n    socket.emit('votar-banda', id);\n  };\n\n  const borrar = (id) => {\n    socket.emit('borrar-banda', id);\n  };\n\n  const crearRows = () => {\n    return bands.map((band) => (\n      <tr key={band.id}>\n        <td>\n          <button className=\"btn btn-primary\" onClick={() => votar(band.id)}>\n            {' '}\n            +1{' '}\n          </button>\n        </td>\n        <td>\n          <input\n            className=\"form-control\"\n            value={band.name}\n            onChange={(event) => cambioNombre(event, band.id)}\n            onBlur={() => onPerdioFoco(band.id, band.name)}\n          />\n        </td>\n        <td>\n          {' '}\n          <h3> {band.votes} </h3>{' '}\n        </td>\n        <td>\n          <button className=\"btn btn-danger\" onClick={() => borrar(band.id)}>\n            Delete\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <>\n      <table className=\"table table-stripped\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n            <th>Votes</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>{crearRows()}</tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport { SocketContext } from '../context/SocketContext';\nimport { Chart } from 'chart.js';\n\nexport const BandChart = () => {\n\n    const { socket } = useContext( SocketContext );\n\n    useEffect(() => {\n        socket.on('current-bands', (bands) => {\n            crearGrafica( bands );\n        });\n    }, [ socket ])\n\n\n    const crearGrafica = ( bands = []) => {\n        const ctx = document.getElementById('myChart');\n        new Chart(ctx, {\n            type: 'horizontalBar',\n            data: {\n                labels: bands.map( band => band.name ),\n                datasets: [{\n                    label: '# of Votes',\n                    data: bands.map( band => band.votes ),\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                animation: false,\n                scales: {\n                    xAxes: [{\n                        stacked: true\n                    }]\n                }\n            }\n        });\n    }\n\n    return (\n        <canvas id=\"myChart\"></canvas>\n    )\n}\n","import React, { useContext } from 'react';\nimport { SocketContext } from '../context/SocketContext';\n\nimport { BandAdd } from '../componets/BandAdd';\nimport { BandList } from '../componets/BandList';\nimport { BandChart } from '../componets/BandChart';\n\nfunction HomePage() {\n  const { online } = useContext(SocketContext);\n\n  return (\n    <div className=\"container\">\n      <div className=\"alert\">\n        <p>\n          Service status:\n          {online ? (\n            <span className=\"text-success\"> Online</span>\n          ) : (\n            <span className=\"text-danger\"> Offline</span>\n          )}\n        </p>\n      </div>\n\n      <h1>Conquest of Music Bands</h1>\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <BandChart />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <BandList />\n        </div>\n\n        <div className=\"col-4\">\n          <BandAdd />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { SocketProvider } from './context/SocketContext';\n\nimport HomePage from './pages/HomePage';\n\nexport const BandNamesApp = () => {\n  return (\n    <SocketProvider>\n      <HomePage />\n    </SocketProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { BandNamesApp } from './BandNamesApp';\n\n\nReactDOM.render(\n  <BandNamesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}